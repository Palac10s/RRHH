-- Crear la base de datos
CREATE DATABASE RRHH
ON PRIMARY 
(
    NAME = N'RRHH', 
    FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\RRHH.mdf', 
    SIZE = 8192KB, 
    MAXSIZE = UNLIMITED, 
    FILEGROWTH = 65536KB
)
LOG ON 
(
    NAME = N'RRHH_log', 
    FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\RRHH_log.ldf', 
    SIZE = 8192KB, 
    MAXSIZE = 2048GB, 
    FILEGROWTH = 65536KB
);
GO

USE RRHH;
GO

-- Tabla de Usuarios
CREATE TABLE Usuarios (
    UsuarioID INT IDENTITY(1,1) PRIMARY KEY,
    NombreUsuario NVARCHAR(50) NOT NULL UNIQUE,
    Contraseña NVARCHAR(255) NOT NULL,
    Rol NVARCHAR(20) NOT NULL CHECK (Rol IN ('Admin', 'Operador')),
    FechaCreacion DATETIME DEFAULT GETDATE()
);
GO

-- Tabla de Colaboradores
CREATE TABLE Colaboradores (
    ColaboradorID INT IDENTITY(1,1) PRIMARY KEY,
    NombreCompleto NVARCHAR(100) NOT NULL,
    Telefono NVARCHAR(15) NOT NULL,
    Email NVARCHAR(100) NOT NULL,
    Departamento NVARCHAR(50) NOT NULL,
    Objetivo NVARCHAR(MAX),
    Foto VARBINARY(MAX),
    EstadoActivo BIT DEFAULT 1, -- 1: Activo, 0: Inactivo
    FechaIngreso DATETIME DEFAULT GETDATE(),
    Puesto NVARCHAR(100) DEFAULT 'Sin Especificar'
);
GO

-- Tabla de Formación Académica
CREATE TABLE FormacionAcademica (
    FormacionID INT IDENTITY(1,1) PRIMARY KEY,
    ColaboradorID INT NOT NULL,
    Institucion NVARCHAR(100) NOT NULL,
    Titulo NVARCHAR(100) NOT NULL,
    AñoInicio INT NOT NULL,
    AñoFin INT NOT NULL,
    FOREIGN KEY (ColaboradorID) REFERENCES Colaboradores(ColaboradorID) ON DELETE CASCADE
);
GO

-- Tabla de Experiencia Profesional
CREATE TABLE ExperienciaProfesional (
    ExperienciaID INT IDENTITY(1,1) PRIMARY KEY,
    ColaboradorID INT NOT NULL,
    Puesto NVARCHAR(100) NOT NULL,
    Empresa NVARCHAR(100) NOT NULL,
    AñoInicio INT NOT NULL,
    AñoFin INT NOT NULL,
    FOREIGN KEY (ColaboradorID) REFERENCES Colaboradores(ColaboradorID) ON DELETE CASCADE
);
GO

-- Tabla de Habilidades
CREATE TABLE Habilidades (
    HabilidadID INT IDENTITY(1,1) PRIMARY KEY,
    ColaboradorID INT NOT NULL,
    Habilidad NVARCHAR(100) NOT NULL,
    FOREIGN KEY (ColaboradorID) REFERENCES Colaboradores(ColaboradorID) ON DELETE CASCADE
);
GO

-- Tabla de Competencias
CREATE TABLE Competencias (
    CompetenciaID INT IDENTITY(1,1) PRIMARY KEY,
    ColaboradorID INT NOT NULL,
    Competencia NVARCHAR(100) NOT NULL,
    Dominio NVARCHAR(50) NOT NULL,
    FOREIGN KEY (ColaboradorID) REFERENCES Colaboradores(ColaboradorID) ON DELETE CASCADE
);
GO

-- Tabla de Referencias
CREATE TABLE Referencias (
    ReferenciaID INT IDENTITY(1,1) PRIMARY KEY,
    ColaboradorID INT NOT NULL,
    TipoReferencia NVARCHAR(20) NOT NULL CHECK (TipoReferencia IN ('Laboral', 'Personal')),
    Nombre NVARCHAR(100) NOT NULL,
    Telefono NVARCHAR(15) NOT NULL,
    FOREIGN KEY (ColaboradorID) REFERENCES Colaboradores(ColaboradorID) ON DELETE CASCADE
);
GO

-- Tabla de Historial de Actividades
CREATE TABLE HistorialActividades (
    ActividadID INT IDENTITY(1,1) PRIMARY KEY,
    UsuarioID INT NOT NULL,
    Accion NVARCHAR(255) NOT NULL,
    FechaActividad DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UsuarioID) REFERENCES Usuarios(UsuarioID)
);
GO

-- Procedimientos almacenados para búsqueda general
CREATE PROCEDURE BuscarGeneral
    @Campo NVARCHAR(50),
    @Valor NVARCHAR(100)
AS
BEGIN
    -- Búsqueda por Nombre Completo
    IF @Campo = 'NombreCompleto'
    BEGIN
        SELECT ColaboradorID, NombreCompleto, Departamento, Puesto, EstadoActivo, FechaIngreso
        FROM Colaboradores
        WHERE NombreCompleto LIKE '%' + @Valor + '%';
    END
    -- Búsqueda por Habilidad
    ELSE IF @Campo = 'Habilidad'
    BEGIN
        SELECT c.ColaboradorID, c.NombreCompleto, h.Habilidad
        FROM Colaboradores c
        INNER JOIN Habilidades h ON c.ColaboradorID = h.ColaboradorID
        WHERE h.Habilidad LIKE '%' + @Valor + '%';
    END
    -- Búsqueda por Competencia
    ELSE IF @Campo = 'Competencia'
    BEGIN
        SELECT c.ColaboradorID, c.NombreCompleto, comp.Competencia, comp.Dominio
        FROM Colaboradores c
        INNER JOIN Competencias comp ON c.ColaboradorID = comp.ColaboradorID
        WHERE comp.Competencia LIKE '%' + @Valor + '%';
    END
    -- Búsqueda por Departamento
    ELSE IF @Campo = 'Departamento'
    BEGIN
        SELECT ColaboradorID, NombreCompleto, Departamento, Puesto
        FROM Colaboradores
        WHERE Departamento LIKE '%' + @Valor + '%';
    END
    ELSE
    BEGIN
        PRINT 'Campo no válido para búsqueda.';
    END
END;
GO

-- Procedimiento para registrar actividades en el historial
CREATE PROCEDURE RegistrarActividad
    @UsuarioID INT,
    @Accion NVARCHAR(255)
AS
BEGIN
    INSERT INTO HistorialActividades (UsuarioID, Accion, FechaActividad)
    VALUES (@UsuarioID, @Accion, GETDATE());
END;
GO
